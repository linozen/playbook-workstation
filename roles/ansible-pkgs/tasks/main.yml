---
- name: Update all packages to their latest version
  become: true
  apt:
    name: "*"
    state: latest
    update_cache: true

- name: Add third-party repository keys
  become: true
  apt_key:
    url: "{{ item.key_location }}"
    state: present
  loop: "{{ third_party_repos }}"

- name: Add third-party repositories
  become: true
  apt_repository:
    repo: "{{ item.repo }}"
    state: present
    filename: "{{ item.filename }}"
    update_cache: true
  loop: "{{ third_party_repos }}"

- name: Add third-party repositories (ppa)
  become: true
  apt_repository:
    repo: "{{ item.repo }}"
    codename: "{{ item.codename }}"
    update_cache: true
  loop: "{{ ppas }}"

- name: Install base packages
  become: true
  apt:
    state: present
    update_cache: true
    pkg: "{{ to_install }}"

- name: Remove unnecessary packages
  become: true
  apt:
    state: absent
    purge: true
    update_cache: true
    pkg: "{{ to_remove }}"

- name: Install flatpacks from flathub.org
  shell: flatpak install -y --noninteractive flathub {{ item }}
  with_items:
    - org.chromium.Chromium
    - com.github.tchx84.Flatseal
    - nl.hjdskes.gcolor3
    - com.github.huluti.Curtail
    - org.gnome.gitlab.YaLTeR.VideoTrimmer
    - flathub net.ankiweb.Anki
    - im.riot.Riot
    - com.wire.WireDesktop

- name: Remove useless packages from the cache
  become: true
  apt:
    autoclean: true

- name: Remove dependencies that are no longer required
  become: true
  apt:
    autoremove: true

- name: Copy syncthing user service to systemd directory
  become: true
  copy:
    src: syncthing.service
    dest: "/etc/systemd/user/syncthing.service"

- name: Enable syncthing user service
  service:
    name: syncthing
    enabled: true
    state: started
    scope: user

- name: Disable rootful Docker daemon
  become: true
  service:
    name: docker.service
    enabled: false
    state: stopped

- name: Disable rootful Docker socket
  become: true
  service:
    name: docker.socket
    enabled: false
    state: stopped

- name: Install rootless Docker
  shell: "dockerd-rootless-setuptool.sh install"

- name: Get Mullvad VPN Signing Key
  shell: "wget https://mullvad.net/media/mullvad-code-signing.asc -O /tmp/mullvad-code-signing.asc"

- name: Get Mullvad VPN Signing Key
  shell: "gpg2 --import /tmp/mullvad-code-signing.asc"

- name: Get Mullvad VPN client
  get_url:
    url: "https://mullvad.net/download/app/deb/latest"
    dest: "{{ ansible_env.HOME }}/Downloads"

- name: Get Mullvad VPN client signing key
  get_url:
    url: "https://mullvad.net/download/app/deb/latest/signature"
    dest: "{{ ansible_env.HOME }}/Downloads"

- name: Get Mullvad VPN Signing Key
  shell: "gpg2 --verify {{ ansible_env.HOME }}/Downloads/MullvadVPN-*.asc"

- name: Install Mullvad VPN client
  become: true
  shell: "yes | dpkg -i /home/lino/Downloads/Mullvad*.deb"

- name: Set Mullvad VPN account key
  become: true
  shell: "mullvad account set {{ mullvad_account_number }}"
